// Generated by CoffeeScript 1.6.2
var app, config, configPath, dbox, defaultConfig, devConfigPath, e, fs, prodConfigPath, stdin, util, yaml;

fs = require("fs");

util = require("util");

dbox = require("dbox");

yaml = require("js-yaml");

stdin = process.openStdin();

process.env.NODE_ENV = process.env.NODE_ENV || "development";

defaultConfig = {
  dir: "./test/backups",
  local_backup_dir: "./test/backups/",
  app_key: "0000000",
  app_secret: "000000000000",
  access_token: null
};

devConfigPath = "./config/development.yml";

prodConfigPath = "./config/production.yml";

configPath = "./config/" + process.env.NODE_ENV + ".yml";

try {
  config = require(configPath);
} catch (_error) {
  e = _error;
  console.log("Creating default config files...");
  fs.writeFileSync(devConfigPath, yaml.safeDump(defaultConfig));
  fs.writeFileSync(prodConfigPath, yaml.safeDump(defaultConfig));
  console.log("Done creating default configs.");
  console.log("Please edit the ./config/" + process.env.NODE_ENV + ".yml file with your APP_KEY and APP_SECRET from http://dropbox.com/developers.");
  process.exit();
}

app = dbox.app({
  app_key: config.app_key,
  app_secret: config.app_secret
});

app.requesttoken(function(status, request_token) {
  if (status !== 200) {
    console.error("ERROR: Did you put the app key and secret in ./config/" + process.env.NODE_ENV + ".yml?");
    process.exit();
  }
  util.puts("Open the following URL in your browser and authorize the app:\n");
  util.puts(request_token.authorize_url);
  util.puts("\nPress return when it's done.");
  return stdin.once("data", function() {
    return app.accesstoken(request_token, function(status, access_token) {
      if (status !== 200) {
        console.log(access_token);
      } else {
        config.access_token = access_token;
        fs.writeFileSync(configPath, yaml.safeDump(config), "utf-8");
        console.log("Access token set up successfuly");
      }
      return process.exit();
    });
  });
});
